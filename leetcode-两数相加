/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int ans = (l1->val + l2->val)%10;
        int num = (l1->val + l2->val)/10;
        struct ListNode* res = new struct ListNode(ans);
        struct ListNode* res_s = res;
        //int num = 0,num1,num2;
        l1 = l1->next;
        l2 = l2->next;   
        while(l1 != NULL || l2 != NULL || num == 1){
            struct ListNode* Node = new struct ListNode(0);
            if (l1 == NULL && l2 == NULL)
            {
                ans = num;
                num = 0;
                Node->val = ans;
            }
            else if (l1 == NULL)
            {
                ans = (l2->val + num) % 10;
                num = (l2->val + num) / 10;
                Node->val = ans;
                l2 = l2->next;
            }
            else if (l2 == NULL)
            {
                ans = (l1->val + num) % 10;
                num = (l1->val + num) / 10;
                Node->val = ans;
                l1 = l1->next;
            }
            else 
            {
                ans = (l1->val + l2->val + num) % 10;
                num = (l1->val + l2->val + num) / 10;
                Node->val = ans;
                l1 = l1->next;
                l2 = l2->next;
            }         
            res->next = Node;
            res = res->next;
        }
        return res_s;
    }
};
