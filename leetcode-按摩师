class Solution {
public:
    int massage(vector<int>& nums) {
        //法一 
        int n = nums.size();
        if (n == 0) return 0;
        if (n == 1) return nums[0];

        vector<vector<int>> dp(n, vector<int>(2));
        dp[0][1] = nums[0];

        for (int i = 1; i < n; ++i) {
            dp[i][0] = max(dp[i - 1][0], dp[i - 1][1]);
            dp[i][1] = max(dp[i - 1][0] + nums[i], dp[i - 1][1]);
        }

        return max(dp[n - 1][0], dp[n - 1][1]);
        
        //法二
        int n = nums.size();
        if (n == 0) return 0;
        if (n == 1) return nums[0];

        int dp1 = nums[0], dp0 = 0;
        for (int i = 1; i < n; ++i) {
            int dp = dp0;
            dp0 = max(dp0, dp1);
            dp1 = max(dp + nums[i], dp1);
        }

        return max(dp0, dp1);
    }
};
