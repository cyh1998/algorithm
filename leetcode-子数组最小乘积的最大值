class Solution {
public:
    int maxSumMinProduct(vector<int>& nums) {
        nums.insert(nums.begin(), 0);
        nums.emplace_back(0);
        int n = nums.size();
        vector<long long> sum(n + 1);
        for (int i = 0; i < n; ++i) {
            sum[i + 1] = sum[i] + nums[i];
        }

        stack<int> stk;
        long long ret = 0;
        long long mod = 1e9 + 7;
        for (int i = 0; i < nums.size(); ++i) {
            while (!stk.empty() && nums[stk.top()] > nums[i]) {
                int tmp = stk.top();
                stk.pop();
                ret = max(ret, (sum[i] - sum[stk.top() + 1]) * nums[tmp]);
            }
            stk.emplace(i);
        }
        return ret % mod;
    }
};
