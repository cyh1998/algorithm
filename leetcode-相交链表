/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA == NULL || headB == NULL) return NULL;
        ListNode *p = headA;
        ListNode *q = headB;
        int lenA = 0 ,lenB = 0;
        while(p->next != NULL)
        {
            p = p->next;
            lenA++;
        }
        while(q->next != NULL)
        {
            q = q->next;
            lenB++;
        }
        if(q!=p) return NULL;
        int x = abs(lenA-lenB);
        if(lenA > lenB)
        {
            for(int i = 0 ; i < x ; i++)
                headA = headA->next;
        }
        else
        {
            for(int i = 0 ; i < x ; i++)
                headB = headB->next;
        }
        while(headA != headB)
        {
            headA = headA->next;
            headB = headB->next;
        }
        return headA;
    }
};
