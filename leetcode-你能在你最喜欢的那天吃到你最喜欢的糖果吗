class Solution {
public:
    vector<bool> canEat(vector<int>& candiesCount, vector<vector<int>>& queries) {
        int n = candiesCount.size();
        vector<long long> sum(n + 1);
        for (int i = 0; i < n; ++i) {
            sum[i + 1] = sum[i] + candiesCount[i];
        }
        
        vector<bool> ret;
        for (auto &i : queries) {
            long long max = (long long)(i[1] + 1) * i[2];
            long long min = i[1] + 1;
            if (max > sum[i[0]] && min <= sum[i[0] + 1]) ret.push_back(true);
            else ret.push_back(false);
        }
        
        return ret;
    }
};
