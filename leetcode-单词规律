class Solution {
public:
    bool wordPattern(string pattern, string s) {
        unordered_map<char, string> m;
        unordered_map<string, int> c;
        vector<string> arr;
        string str;

        for (const auto &i : s) {
            if (i == ' ') {
                arr.push_back(str);
                str = "";
            } else str += i;
        }
        arr.push_back(str);

        if (pattern.size() != arr.size()) return false;

        for (int i = 0; i < pattern.size(); ++i) {
            if (m.find(pattern[i]) != m.end()) {
                if (m[pattern[i]] != arr[i]) return false;
            } else {
                m[pattern[i]] = arr[i];
                if (c[arr[i]] > 0) return false;
                else c[arr[i]]++;
            }
        }

        return true;
    }
};
