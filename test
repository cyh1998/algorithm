class Solution {
public:
    int trailingZeroes(int n) {
        long long num = 1;
        while(n>0){
            num *= n;
            n--;
        }
        char res;
        string s = "";
        while(n>0){
            res = char(n%10);
            n /= 10;
            s = res + s;
        }
        printf("%s",s);
        
        int count = 0;
        for(int i = s.length()-1;i>0;i--){
            if(s[i]==0) count++; 
        }
        return count;
    }
};



class Solution {
public:
    int longestRepeatingSubstring(string S) {
        if(S.size()==1) return 1;
        int max = 0;
        char* p1 = &S[0];
        char* p2 = &S[1];
        int count;
        while(p1!=NULL){
            count = 0;
            while(p2!=NULL){
                if(*p1==*p2){
                    p1++;
                    p2++;
                    count++;
                }else p2++;
            }
            p1++;
            p2 = p1;
            p2++;
            if(count>max) max = count;
        }
        return max;
    }
};

