class Solution {
public:
    int deleteAndEarn(vector<int>& nums) {
        map<int, int> m;
        vector<int> dp = {0};
        for (int i = 0; i < nums.size(); ++i) m[nums[i]]++;
        for (auto &i : m) dp.emplace_back(i.first);

        int n = dp.size();
        int last = dp[1];
        dp[1] = dp[1] * m[dp[1]];
        
        for (int i = 2; i < n; ++i) {
            if(dp[i] - last == 1) {
                last = dp[i];
                dp[i] = max(dp[i-1], dp[i-2] + dp[i] * m[dp[i]]);
            } else {
                last = dp[i];
                dp[i] = dp[i-1] + dp[i] * m[dp[i]];
            }
        }

        return dp[n - 1];
    }
};
