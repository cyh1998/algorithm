class Solution {
public:
    int rob(vector<int>& nums) {
		int n = nums.size();
        if (n == 1) return nums[0];
		vector<vector<int>> dp(n + 1, vector<int>(2));
		for (int i = 1; i < n; ++i) {
			dp[i + 1][0] = max(dp[i][0], dp[i][1]);
			dp[i + 1][1] = max(dp[i][0] + nums[i], dp[i][1]);
		}
		int one = max(dp[n][0], dp[n][1]);

		for (int i = 0; i < n; ++i) {
			dp[i + 1][0] = max(dp[i][0], dp[i][1]);
			dp[i + 1][1] = max(dp[i][0] + nums[i], dp[i][1]);
		}
		int two = max(dp[n - 1][0], dp[n - 1][1]);

		return max(one, two);
    }
};
