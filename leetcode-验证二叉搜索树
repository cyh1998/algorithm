/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    // vector<int> arr;
    // bool isValidBST(TreeNode* root) {
    //     if(root == NULL) return true;
    //     ValidBSTtoVector(root);
    //     for(int i = 0;i < arr.size() - 1;i++){
    //         if(arr[i+1] <= arr[i]) return false;
    //     }
    //     return true;
    // }

    // void ValidBSTtoVector(TreeNode* root){
    //     if(root == NULL) return;
    //     ValidBSTtoVector(root->left);
    //     arr.push_back(root->val);
    //     ValidBSTtoVector(root->right);
    // }
    long pre_val = LONG_MIN;
    bool isValidBST(TreeNode* root) {
        if(!root) return true;
        //当左为false 返回
        if(!isValidBST(root->left)) return false;
        if(root->val<=pre_val) return false;
        pre_val = root->val;
        //递归右子树
        return isValidBST(root->right);
    }
};
