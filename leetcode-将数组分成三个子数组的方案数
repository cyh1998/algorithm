class Solution {
public:
    int waysToSplit(vector<int>& nums) {
        int n = nums.size(), mod = 1e9 + 7;
        long long ret = 0;
        vector<int> sum(n + 1);

        for (int i = 1; i <= n; ++i) sum[i] = sum[i - 1] + nums[i - 1];

        for (int i = 1; i < n - 1; ++i) {
            if (sum[i] * 3 > sum[n]) break;

            int l = i + 1, ll = i + 1, r = n - 1, rr = n - 1;
            while (l <= r) {
                int mid = (l + r) / 2;
                if (sum[n] - sum[mid] >= sum[mid] - sum[i]) l = mid + 1;
                else r = mid - 1;
            }

            while (ll <= rr) {
                int mid = (ll + rr) / 2;
                if (sum[mid] - sum[i] >= sum[i]) rr = mid - 1;
                else ll = mid + 1;
            }

            ret += (r - ll + 1);
        }
        
        return ret % mod;
    }
};
