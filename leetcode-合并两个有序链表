/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if (l1 == NULL && l2 == NULL) return NULL;
        else if (l1 == NULL) return l2;
        else if (l2 == NULL) return l1;
             
        ListNode *p1;
        ListNode *p2;
        ListNode *p,*P;
        p1 = l1;
        p2 = l2;
        
        if (p1->val <= p2->val) {
            P = p = p1;
            p1 = p1->next;
        } else {
            P = p = p2;
            p2 = p2->next;
        }
        
        while(p1!=NULL && p2!=NULL){
                if(p1->val <= p2->val){
                    p->next = p1;
                    p = p->next;
                    p1 = p1->next;
                }
                else{
                    p->next = p2;
                    p = p->next;
                    p2 = p2->next;
                }
        }
        
        if (p1 == NULL)
            p->next = p2;
        else 
            p->next = p1;
        
        return P;
    }
};
