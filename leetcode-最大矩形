class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        int row = matrix.size();
        if (row == 0) return 0;
        int column = matrix[0].size();
        int res = 0;

        vector<int> arr(column + 2, 0);
        for (int i = 0; i < row; ++i) {
            for (int j = 0; j < column; ++j) {
                arr[j + 1] = matrix[i][j] == '0' ? 0 : arr[j + 1] + 1;
            }
            res = max(res, largestRectangleArea(arr));
        }
        return res;
    }

    int largestRectangleArea(vector<int>& heights) {
        vector<int> arr;
        int res = 0;

        for (int i = 0; i < heights.size(); ++i) {
            while (!arr.empty() && heights[arr.back()] > heights[i]) {
                int h = heights[arr.back()];
                arr.pop_back();
                res = max(res, h * (i - arr.back() - 1));
            }
            arr.push_back(i);
        }
        return res;
    }
};
