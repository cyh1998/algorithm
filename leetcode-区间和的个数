class Solution {
public:
    // int countRangeSum(vector<int>& nums, int lower, int upper) {
    //     int count = 0;

    //     for (int i = 0; i < nums.size(); ++i) {
    //         long temp = 0;
    //         for (int j = i; j < nums.size(); ++j) {
    //             temp += nums[j];
    //             if (temp >= lower && temp <= upper) count++;
    //         }
    //     }

    //     return count;
    // }

    int countRangeSum(vector<int>& nums, int lower, int upper) {
        multiset<long long> sum;
        long long x = 0;
        int count = 0;
        sum.insert(x);

        for (int i = 0; i < nums.size(); ++i) {
            x += nums[i];
            count += distance(sum.lower_bound(x - upper), sum.upper_bound(x - lower));
            sum.insert(x);
        }

        return count;
    }
};
