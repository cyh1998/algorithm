class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> ret;
        vector<int> inDegree(numCourses);
        unordered_map<int, vector<int>> m;
        for (auto &i : prerequisites) {
            ++inDegree[i[0]];
            m[i[1]].emplace_back(i[0]);
        }

        queue<int> q;
        for (int i = 0; i < numCourses; ++i) {
            if (!inDegree[i]) q.push(i);
        }

        while (!q.empty()) {
            int num = q.front();
            ret.emplace_back(num);
            q.pop();
            for (auto &i : m[num]) {
                if (--inDegree[i] == 0) q.push(i);
            }
        }

        return ret.size() == numCourses ? ret : vector<int>(0);
    }
};
