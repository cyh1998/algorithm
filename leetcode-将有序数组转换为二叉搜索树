/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        if(nums.size()==0) return NULL;
        //TreeNode* t;
        //int low = 0;
        //int high = nums.size();
        //t->val = nums[(low+high)/2];
        return MY(0,nums.size()-1,nums);
    }
    
    TreeNode* MY(int low,int high,vector<int>& nums){
        if(low>high) return NULL;
        TreeNode* root = NULL;
        if(low==high) return new TreeNode(nums[low]); 
        int mid = (low+high)/2;  //mid = low+(high-low)/2;
        root = new TreeNode(nums[mid]);
            //t->val = nums[(low+high+1)/2];
            //MY(low,(low+high+1)/2,t->left,nums);
            //MY((low+high+1)/2,high,t->right,nums);
        root->left = MY(low,mid-1,nums);
        root->right = MY(mid+1,high,nums);
        return root;
    }
};
